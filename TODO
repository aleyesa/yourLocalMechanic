Current tasks:


[O] Find a solution with location overwriting other data.
[] Edit specialties:
    - I want to create a way to show current specialties
        - should give 2 options: 
          1. Delete
          [Sort of] Convert current data to be in a list format.
          [O]  Add a delete button to the end of each of the specialties.
          [O]  Create an event listener to check if the delete button has been pressed.
            [O] Removing the chosen specialty:
              [O] Api created to remove specialties
          2. Update specialties
          [O] Have form for updating specialties.
          [] Create an event listener when update button has been pressed.
            [] Temporarily hold the data that has input in given text field.
            [] Create an ajax function to update database.
        * convert it to list format so i can simply delete.
          3. Go back to main car shop info page once done updating
          [] Have a "return" button to stop updating
          [] Once return button has been pressed give notification.
    - I want to create a way to add new specialties in the current car shop.
        - [O] possibly we can reuse the code from creating a car shop when adding a specialty.

    *Line 173-179 Needs to address other index in the array.
    *html preinting out duplicate description of specialty.

    -[DONE]Create an ajax function to remove specified specialty from database.

    -remove specified specialty html.
    [O] use response from ajax request to update html.
    [O] somehow get labor to work with specialty section
    [O] fix spec id when deleting a specialty 
    *has to deal with specId concatanation

    [] have one edit button that brings the profile tab to edit mode.
    [] integrate edit specialties with both forms.
    [O] figure out where to put 'addCarshop' function.

    [O]create conditional statement to check if input field is empty or not
        so that we can put inputed data into an object

    [O] get ajax function working with given labor data.
    [O] get car shop name integrated with data object.
    [O] backBtn
      [O]when backBtn has been pressed navigate back to profile.
      [O]hide backBtn when pressed.

    [O]fix labor update 

    [O] remove main car shop info form

    [O] implement add specialties
    []update specialties list html when adding a specialties.
      [0]use response to update html
      [0]use jquery to add new li after current last li
      [0]Fix for each statements
    [O]when pressing update button navigate to car shope profile 

    [O]Get delete carshop working.
    [O]Get add car shop working.
    [O] ** update cs info is not being run.


    *Owner Profile: 

      [O] Change password with encryption.
      [] Allow to change account name.
        

    *Messaging:

    [O]send messages/receive messages
    [O]update message box html
    []deleting messages should:
    [O] add hidden msg id for each reply
    line 1228 use ajax request to update object
      [O]hide if only one person deletes specific messages
      [O]completely delete specific message when both have removed from there message box.
      When user clicks msgThread:
        [O] Check array and see if the user thats signed in has removedMsg boolean value set to true,
            if it does, always hide that message.
      When currently logged in user deletes a message thread:
        [] Set removedMsg to true for all the messages in the msgThread.
        [] Don't show msgThread.
      If both users deleted msgThread delete the messages entirely.

      
      []Get conditional statement working with username.


      Hiding a message: 

      Tap on header(when we create one).

      How message thread works:

        We created an ajax function that gets:

          [O] All messages from specified client
          [O] All messages from specified car shop Owner

          For the currently logged in user:

            We should hide the message if the user's 'removedMsg' value is true
            if show the message like normal

            We should also check if both the client and car shop owner 'removedMsg' value is true
            If it is then we delete that specified message.


** Fix deleteMsg request [O]

** Populating message

  Check if there is an messages in the array of messages **FIX
    [O] If there is create html string and show 
    [O] If there is nothing, delete the conversation.
        [O]Figure out a way to populate msgThread in selected client or cs
        [O]Figure out way to get msgThread id to delete.

  * Figure out how to remove/hide message thread when user has deleted the all the messages
  in the specified message thread.
      ***Deals with populateClientInfoInfo and populateCS
      ***When user clicks on messages tab it should:
        -check if there is any carshops or clients that hid 'all' there messages
            if they did don't show
                -modify messages anchor to populate message.
                -add hide key to carshowowner collection.

                    -- When user clicks on messages tab it should possibly:
                        populate all the messages but:
                          hide them on first reload.
                          -Modify the populate message:
                              get all the users that sent a message to the currently logged in user.
                              and use populate message with all the users.

                              loop around all the users that sent a message and call populate message
                              create html string to populate messages
                

  * have send message form right next to the carshop instead of having it in the bottom [O].

  *Figure out populateClientInfo and populateMessage();
    PopulateMessage: 
      Have to figure out a way to loop over ajax request to get all messages for each carshop
      or client and display it through html.

    My idea:

        Figure out a way to populate everything when the user logs in.

  12/28
  have an array or some variable that holds the message thread for each recipient
  Example:
    two recipients: Recipient1 and Recipient2
  
    Get id from each recipient[O]
    hold array of all recipient ids[O] 
    loop through recipient id array and call populateMessages[O]
      Somehow have another array or variable that holds html version of each recipients message thread.
